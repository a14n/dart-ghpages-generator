{"dependencies":[{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"","id":"0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"}],"uri":"file:///home/sbdwad4/perso/devs/dartStuff/dart-publish-gh-pages-ghpages-1375042645160/lib/ghpages_generator.dart","id":"ghpages_generator","children":[{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis class allows to generate a new version of gh-pages. You can choose\nwhat you want to put in gh-pages : examples, dartdoc, docs and/or custom\nfiles.\n\nAs sample here's how the gh-pages for this package is generated :\n\n    new gh.Generator()\n    ..setDartDoc(['lib/ghpages_generator.dart'], excludedLibs: ['path'])\n    ..templateDir = 'gh-pages-template'\n    ..generate();\n","name":"Generator","id":"Generator","children":[{"comment":"\nSpecify that _dartdoc_ have to be generated for the given [files].\n[dartdoc](http://www.dartlang.org/docs/dart-up-and-running/contents/ch04-tools-dartdoc.html)\noptions can be set through the named parameters. By default, _dartdoc_ is\ngenerated in `docs/dartdoc` in _static_ mode and without code.\n","name":"setDartDoc","id":"setDartDoc6()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"name":"files","id":"files","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'docs/dartdoc'","name":"outDir","id":"outDir","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"code","id":"code","line":"71","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"isOptional":true,"name":"excludedLibs","id":"excludedLibs","line":"71","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"omitGenerationTime","id":"omitGenerationTime","line":"71","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'static'","name":"mode","id":"mode","line":"72","kind":"param"}],"line":"70","kind":"method"},{"comment":"Specify that examples have to be compiled and included in _gh-pages_.","name":"setExamples","id":"setExamples2()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"value","id":"value","kind":"param"},{"isNamed":true,"isOptional":true,"defaultValue":"true","name":"compileDart","id":"compileDart","kind":"param"}],"line":"94","kind":"method"},{"isSetter":true,"comment":"Specify that the `docs` directory have to be paste in _gh-pages_.","name":"withDocs=","id":"withDocs=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"value","id":"value","kind":"param"}],"line":"100","kind":"method"},{"isSetter":true,"comment":"Indicates a template directory from which all files will be paste in\n_gh-pages_.","name":"templateDir=","id":"templateDir=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"templateDir","id":"templateDir","kind":"param"}],"line":"104","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[],"name":"Future"},"comment":"Generate gh-pages. A [doCustomTask] method can be set to perform custom\noperations just before committing files.","name":"generate","id":"generate1()","children":[{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"doCustomTask","id":"doCustomTask","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"108","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_delete","isPrivate":true,"id":"_delete2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"dir","id":"dir","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"name":"elements","id":"elements","kind":"param"}],"line":"189","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_copy","isPrivate":true,"id":"_copy4()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"sourceDirPath","id":"sourceDirPath","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"targetDirPath","id":"targetDirPath","kind":"param"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Iterable"},"name":"elementsToCopy","id":"elementsToCopy","line":"198","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"accept","id":"accept","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/String","name":"String"},"uri":"file:///home/sbdwad4/perso/devs/dartStuff/dart-publish-gh-pages-ghpages-1375042645160/lib/ghpages_generator.dart","name":"sourcePath","id":"sourcePath","line":"199","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"199","kind":"param"}],"line":"197","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"The directory use to build the gh-pages branch.","name":"workDir","id":"workDir","line":"62","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_rootDir","isPrivate":true,"id":"_rootDir","line":"35","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_workDir","isPrivate":true,"id":"_workDir","line":"36","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_gitRemoteOnRoot","isPrivate":true,"id":"_gitRemoteOnRoot","line":"37","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_dartdocOutDir","isPrivate":true,"id":"_dartdocOutDir","line":"39","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"name":"_dartdocOptions","isPrivate":true,"id":"_dartdocOptions","line":"40","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"name":"_dartdocFiles","isPrivate":true,"id":"_dartdocFiles","line":"41","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_examples","isPrivate":true,"id":"_examples","line":"43","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_examplesCompileDart","isPrivate":true,"id":"_examplesCompileDart","line":"44","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_docs","isPrivate":true,"id":"_docs","line":"46","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_templateDir","isPrivate":true,"id":"_templateDir","line":"47","kind":"variable"},{"comment":"\nCreate a [Generator] based on the current directory where script is launch.\nYou can customize the name of the directory with the [rootDir] named\nparameter.\n","name":"","id":"1()","children":[{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"rootDir","id":"rootDir","kind":"param"}],"line":"54","kind":"constructor"}],"line":"34","kind":"class"}],"line":"15","kind":"library"}